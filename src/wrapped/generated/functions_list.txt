#() vFE
#() vFv
#() vFi
#() vFu
#() vFU
#() vFf
#() vFd
#() vFl
#() vFL
#() vFp
#() vFS
#() cFv
#() cFi
#() cFu
#() cFf
#() cFp
#() wFp
#() iFE
#() iFv
#() iFw
#() iFi
#() iFI
#() iFC
#() iFW
#() iFu
#() iFU
#() iFf
#() iFd
#() iFD
#() iFl
#() iFL
#() iFp
#() iFO
#() iFS
#() IFv
#() IFi
#() IFI
#() IFf
#() IFd
#() IFp
#() CFC
#() CFp
#() WFi
#() WFW
#() WFp
#() uFv
#() uFi
#() uFu
#() uFd
#() uFl
#() uFL
#() uFp
#() UFv
#() UFu
#() UFp
#() UFV
#() fFi
#() fFf
#() fFp
#() dFv
#() dFi
#() dFu
#() dFd
#() dFp
#() lFE
#() lFv
#() lFi
#() lFl
#() lFp
#() LFv
#() LFu
#() LFL
#() LFp
#() pFE
#() pFv
#() pFw
#() pFi
#() pFI
#() pFC
#() pFW
#() pFu
#() pFU
#() pFd
#() pFl
#() pFL
#() pFp
#() pFV
#() HFi
#() HFp
#() vFEp
#() vFii
#() vFiI
#() vFiu
#() vFiU
#() vFif
#() vFid
#() vFip
#() vFWW
#() vFWp
#() vFui
#() vFuu
#() vFuU
#() vFuf
#() vFud
#() vFul
#() vFup
#() vFUi
#() vFfi
#() vFff
#() vFfp
#() vFdd
#() vFlp
#() vFLL
#() vFLp
#() vFpc
#() vFpi
#() vFpI
#() vFpC
#() vFpW
#() vFpu
#() vFpU
#() vFpf
#() vFpd
#() vFpl
#() vFpL
#() vFpp
#() vFpS
#() vFSi
#() cFpp
#() iFEi
#() iFEp
#() iFwp
#() iFii
#() iFiu
#() iFil
#() iFiL
#() iFip
#() iFiS
#() iFIi
#() iFui
#() iFuu
#() iFuL
#() iFup
#() iFUp
#() iFli
#() iFlp
#() iFLu
#() iFLL
#() iFLp
#() iFpw
#() iFpi
#() iFpI
#() iFpC
#() iFpW
#() iFpu
#() iFpU
#() iFpf
#() iFpd
#() iFpl
#() iFpL
#() iFpp
#() iFpO
#() iFSi
#() IFEp
#() IFpi
#() IFpu
#() IFpd
#() CFip
#() CFui
#() CFpi
#() CFpu
#() CFpp
#() WFpp
#() uFEp
#() uFii
#() uFiu
#() uFip
#() uFui
#() uFuu
#() uFup
#() uFUp
#() uFpw
#() uFpi
#() uFpu
#() uFpU
#() uFpf
#() uFpL
#() uFpp
#() UFEp
#() UFuu
#() UFUp
#() UFpi
#() UFpp
#() fFEp
#() fFif
#() fFfi
#() fFff
#() fFfD
#() fFfp
#() fFpp
#() dFid
#() dFdi
#() dFdd
#() dFdD
#() dFdp
#() dFll
#() dFpi
#() dFpd
#() dFpp
#() DFDi
#() DFDD
#() DFDp
#() DFpp
#() lFii
#() lFll
#() lFpi
#() lFpp
#() LFEL
#() LFii
#() LFuu
#() LFLi
#() LFLL
#() LFpi
#() LFpL
#() LFpp
#() pFEi
#() pFEp
#() pFii
#() pFiI
#() pFiu
#() pFip
#() pFui
#() pFuC
#() pFuu
#() pFup
#() pFUi
#() pFUU
#() pFdi
#() pFdd
#() pFlp
#() pFLu
#() pFLL
#() pFLp
#() pFpi
#() pFpC
#() pFpu
#() pFpU
#() pFpd
#() pFpl
#() pFpL
#() pFpp
#() pFpV
#() pFSi
#() HFII
#() HFll
#() HFpi
#() vFEpi
#() vFEpu
#() vFEpp
#() vFEpV
#() vFiii
#() vFiiu
#() vFiip
#() vFiII
#() vFiui
#() vFiuu
#() vFiup
#() vFiUU
#() vFiff
#() vFidd
#() vFilp
#() vFipi
#() vFipu
#() vFipp
#() vFuii
#() vFuiI
#() vFuiu
#() vFuiU
#() vFuif
#() vFuid
#() vFuip
#() vFuui
#() vFuuu
#() vFuuf
#() vFuud
#() vFuup
#() vFuff
#() vFufp
#() vFudd
#() vFull
#() vFulp
#() vFuLp
#() vFupu
#() vFupp
#() vFfff
#() vFfpp
#() vFddd
#() vFdpp
#() vFLpL
#() vFLpp
#() vFpii
#() vFpiI
#() vFpiC
#() vFpiu
#() vFpif
#() vFpid
#() vFpip
#() vFpui
#() vFpuI
#() vFpuu
#() vFpup
#() vFpUi
#() vFpUu
#() vFpUU
#() vFpUp
#() vFpff
#() vFpdd
#() vFpll
#() vFpLi
#() vFpLu
#() vFpLL
#() vFpLp
#() vFppi
#() vFppu
#() vFppU
#() vFppd
#() vFppl
#() vFppL
#() vFppp
#() iFEiw
#() iFEip
#() iFEWW
#() iFEup
#() iFEUU
#() iFEpi
#() iFEpL
#() iFEpp
#() iFEpV
#() iFEpA
#() iFESp
#() iFwww
#() iFwpp
#() iFiwC
#() iFiii
#() iFiiu
#() iFiil
#() iFiip
#() iFiiO
#() iFiuu
#() iFill
#() iFiLi
#() iFiLp
#() iFiLN
#() iFipi
#() iFipu
#() iFipL
#() iFipp
#() iFipO
#() iFCiW
#() iFuwp
#() iFuui
#() iFuuu
#() iFuup
#() iFuff
#() iFuLL
#() iFuLp
#() iFupL
#() iFupp
#() iFfff
#() iFlip
#() iFLip
#() iFLLi
#() iFLpp
#() iFpwp
#() iFpii
#() iFpiI
#() iFpiu
#() iFpiU
#() iFpiL
#() iFpip
#() iFpIi
#() iFpII
#() iFpCp
#() iFpui
#() iFpuu
#() iFpuU
#() iFpuL
#() iFpup
#() iFpUi
#() iFpUU
#() iFpUp
#() iFpfu
#() iFpff
#() iFpdd
#() iFpli
#() iFpll
#() iFplp
#() iFpLi
#() iFpLu
#() iFpLL
#() iFpLp
#() iFppi
#() iFppI
#() iFppC
#() iFppW
#() iFppu
#() iFppd
#() iFppl
#() iFppL
#() iFppp
#() iFpOu
#() iFpOM
#() iFSpL
#() IFiIi
#() IFpIi
#() IFppi
#() IFppI
#() IFppu
#() IFSIi
#() uFEpW
#() uFEpu
#() uFEpU
#() uFEpp
#() uFipu
#() uFuip
#() uFuuu
#() uFuup
#() uFufp
#() uFupu
#() uFupp
#() uFpii
#() uFpip
#() uFpCi
#() uFpWi
#() uFpWu
#() uFpWf
#() uFpWp
#() uFpui
#() uFpuC
#() uFpuu
#() uFpup
#() uFpfu
#() uFpLp
#() uFppi
#() uFppu
#() uFppp
#() UFUUU
#() UFpiU
#() UFppi
#() UFppu
#() fFull
#() fFfff
#() fFffp
#() fFppi
#() fFppL
#() fFppp
#() dFddd
#() dFddp
#() dFpdd
#() dFppi
#() dFppp
#() DFppi
#() DFppp
#() lFili
#() lFilL
#() lFipi
#() lFipL
#() lFlll
#() lFlpi
#() lFpli
#() lFpLu
#() lFpLp
#() lFppi
#() lFppL
#() lFppp
#() lFSpl
#() LFEpA
#() LFipL
#() LFLLl
#() LFLpu
#() LFLpL
#() LFpii
#() LFpip
#() LFpLi
#() LFpLp
#() LFppi
#() LFppL
#() LFppp
#() LFSpL
#() pFEip
#() pFEiV
#() pFEup
#() pFEpi
#() pFEpu
#() pFEpp
#() pFEpV
#() pFEpA
#() pFiii
#() pFiiu
#() pFiip
#() pFiIi
#() pFiIp
#() pFipi
#() pFipL
#() pFipp
#() pFIpi
#() pFCiW
#() pFWWW
#() pFuii
#() pFuui
#() pFuuu
#() pFupi
#() pFupL
#() pFUpi
#() pFdip
#() pFdUU
#() pFddd
#() pFDip
#() pFLup
#() pFpii
#() pFpiu
#() pFpid
#() pFpil
#() pFpiL
#() pFpip
#() pFpCC
#() pFpCu
#() pFpWW
#() pFpui
#() pFpuu
#() pFpuL
#() pFpup
#() pFpUi
#() pFpUp
#() pFpdu
#() pFplC
#() pFplu
#() pFpll
#() pFplp
#() pFpLu
#() pFpLL
#() pFpLp
#() pFppi
#() pFppI
#() pFppC
#() pFppu
#() pFppU
#() pFppf
#() pFppl
#() pFppL
#() pFppp
#() pFpOM
#() pFSpl
#() vFEiip
#() vFEipp
#() vFEipV
#() vFEipA
#() vFELLp
#() vFEpii
#() vFEpip
#() vFEpup
#() vFEpUp
#() vFEppp
#() vFEppV
#() vFEppA
#() vFiiii
#() vFiiip
#() vFiIII
#() vFiuiu
#() vFiuip
#() vFiuuu
#() vFiulp
#() vFiupu
#() vFiupV
#() vFiUUU
#() vFifff
#() vFiddd
#() vFilpp
#() vFipii
#() vFipup
#() vFippi
#() vFippu
#() vFippp
#() vFuiii
#() vFuiiu
#() vFuiip
#() vFuiII
#() vFuiui
#() vFuiuu
#() vFuiup
#() vFuiUU
#() vFuifi
#() vFuiff
#() vFuidd
#() vFuill
#() vFuilp
#() vFuipi
#() vFuipu
#() vFuipp
#() vFuuii
#() vFuuiu
#() vFuuil
#() vFuuip
#() vFuuui
#() vFuuuu
#() vFuuuf
#() vFuuud
#() vFuuup
#() vFuulp
#() vFuupi
#() vFuupp
#() vFufff
#() vFuddd
#() vFulil
#() vFulip
#() vFullp
#() vFulpi
#() vFulpu
#() vFulpp
#() vFupii
#() vFuppi
#() vFUUpi
#() vFffff
#() vFdddd
#() vFpiii
#() vFpiiu
#() vFpiip
#() vFpiuu
#() vFpiuL
#() vFpiup
#() vFpiUu
#() vFpiUU
#() vFpifi
#() vFpipi
#() vFpipp
#() vFpIdi
#() vFpCiW
#() vFpuip
#() vFpuui
#() vFpuuu
#() vFpuup
#() vFpudd
#() vFpupp
#() vFpUui
#() vFpUuu
#() vFpUup
#() vFpUUi
#() vFpUUp
#() vFpUpp
#() vFpfff
#() vFpdii
#() vFpdip
#() vFpddi
#() vFpddd
#() vFpLLL
#() vFppii
#() vFppiu
#() vFppid
#() vFppiL
#() vFppip
#() vFppui
#() vFppuu
#() vFppup
#() vFppfi
#() vFppdu
#() vFppdd
#() vFppdp
#() vFpplp
#() vFppLp
#() vFpppi
#() vFpppI
#() vFpppu
#() vFpppU
#() vFpppd
#() vFpppL
#() vFpppp
#() cFpiii
#() iFEiip
#() iFEiiN
#() iFEipp
#() iFEipV
#() iFEupp
#() iFEpii
#() iFEpip
#() iFEpiV
#() iFEpiA
#() iFEpUp
#() iFEpLi
#() iFEpLp
#() iFEppi
#() iFEppL
#() iFEppp
#() iFEppV
#() iFEppA
#() iFEpOu
#() iFwwww
#() iFwppp
#() iFiiii
#() iFiiiu
#() iFiiip
#() iFiiiN
#() iFiiui
#() iFiill
#() iFiipi
#() iFiipp
#() iFiuwp
#() iFiuii
#() iFiupp
#() iFilli
#() iFillu
#() iFipii
#() iFipip
#() iFipui
#() iFipup
#() iFipLi
#() iFipLu
#() iFipLp
#() iFippi
#() iFippL
#() iFippp
#() iFipON
#() iFuipu
#() iFuipp
#() iFuuff
#() iFuupi
#() iFupLp
#() iFuppi
#() iFuppp
#() iFLLiW
#() iFpwww
#() iFpwpp
#() iFpiii
#() iFpiiI
#() iFpiiu
#() iFpiid
#() iFpiiL
#() iFpiip
#() iFpiuu
#() iFpiuL
#() iFpiup
#() iFpiUp
#() iFpild
#() iFpipi
#() iFpipC
#() iFpipu
#() iFpipp
#() iFpipV
#() iFpIip
#() iFpCCC
#() iFpCpi
#() iFpWWu
#() iFpuwp
#() iFpuiL
#() iFpuip
#() iFpuui
#() iFpuuu
#() iFpuup
#() iFpuUp
#() iFpuLL
#() iFpuLp
#() iFpupi
#() iFpupu
#() iFpupU
#() iFpupL
#() iFpupp
#() iFpupV
#() iFpUup
#() iFpUUU
#() iFpUpp
#() iFplii
#() iFplip
#() iFpLii
#() iFpLip
#() iFpLLu
#() iFpLpi
#() iFpLpf
#() iFpLpd
#() iFpLpD
#() iFpLpL
#() iFpLpp
#() iFppii
#() iFppiu
#() iFppiL
#() iFppip
#() iFppIL
#() iFppCC
#() iFppuw
#() iFppui
#() iFppuu
#() iFppup
#() iFppdp
#() iFppll
#() iFpplp
#() iFppLi
#() iFppLL
#() iFppLp
#() iFpppi
#() iFpppC
#() iFpppu
#() iFpppU
#() iFpppL
#() iFpppp
#() IFEpIi
#() IFpIip
#() IFppii
#() IFppip
#() IFpppp
#() IFSIii
#() uFEipp
#() uFEupp
#() uFEpup
#() uFEppp
#() uFifff
#() uFuuuu
#() uFpipu
#() uFpipp
#() uFpCCC
#() uFpuip
#() uFpuuu
#() uFpuup
#() uFpupu
#() uFppiu
#() uFppLp
#() uFpppi
#() uFpppu
#() uFpppp
#() UFpipp
#() UFppii
#() UFppip
#() UFpppp
#() dFpppp
#() lFEpip
#() lFEppL
#() lFEppp
#() lFiiLu
#() lFiipL
#() lFipil
#() lFipLi
#() lFipLI
#() lFipLu
#() lFipLl
#() lFipLL
#() lFipLp
#() lFippL
#() lFuipp
#() lFpili
#() lFpilp
#() lFppii
#() lFppip
#() lFpppL
#() LFEppp
#() LFippL
#() LFippp
#() LFpuuu
#() LFpLCL
#() LFpLLp
#() LFpLpL
#() LFpLpp
#() LFppii
#() LFppip
#() LFppLL
#() LFppLp
#() LFpppi
#() LFpppp
#() pFEipp
#() pFEupp
#() pFELpV
#() pFELpA
#() pFEpii
#() pFEpip
#() pFEppi
#() pFEppp
#() pFEppV
#() pFiiii
#() pFiiiu
#() pFiiuu
#() pFiiup
#() pFiipi
#() pFiipp
#() pFiIIi
#() pFipii
#() pFipip
#() pFippi
#() pFippu
#() pFuiii
#() pFulli
#() pFullu
#() pFffff
#() pFdipp
#() pFdddd
#() pFDipp
#() pFlfff
#() pFLiip
#() pFpiii
#() pFpiip
#() pFpiuu
#() pFpiLL
#() pFpipi
#() pFpipd
#() pFpipp
#() pFpCWp
#() pFpCuW
#() pFpCuu
#() pFpuii
#() pFpuip
#() pFpuWp
#() pFpuuC
#() pFpuuu
#() pFpuup
#() pFpupi
#() pFpupu
#() pFpdIU
#() pFplpl
#() pFplpp
#() pFpLip
#() pFpLpL
#() pFppii
#() pFppiu
#() pFppiL
#() pFppip
#() pFppuW
#() pFppuu
#() pFppuL
#() pFppup
#() pFppUU
#() pFppdd
#() pFppll
#() pFppLL
#() pFppLp
#() pFpppi
#() pFpppu
#() pFpppL
#() pFpppp
#() pFSppi
#() vFEiipV
#() vFEiipA
#() vFEippp
#() vFEpipV
#() vFEpipA
#() vFEpuup
#() vFEpuuV
#() vFEpupp
#() vFEpupA
#() vFEpLLp
#() vFEppip
#() vFEppiV
#() vFEppup
#() vFEpppp
#() vFiiiii
#() vFiiiiu
#() vFiiuup
#() vFiipii
#() vFiIIII
#() vFiuiip
#() vFiuipi
#() vFiuuuu
#() vFiulpp
#() vFiuppu
#() vFiUUUU
#() vFiffff
#() vFidddd
#() vFilill
#() vFipipu
#() vFipipp
#() vFipupi
#() vFiplli
#() vFiplll
#() vFuiiii
#() vFuiiiu
#() vFuiiip
#() vFuiifi
#() vFuiIII
#() vFuiuii
#() vFuiuiu
#() vFuiuip
#() vFuiuuu
#() vFuiuup
#() vFuiull
#() vFuiupi
#() vFuiUUU
#() vFuifff
#() vFuiddd
#() vFuipii
#() vFuipip
#() vFuipup
#() vFuippp
#() vFuuiii
#() vFuuiiu
#() vFuuiui
#() vFuuiuu
#() vFuuiup
#() vFuuipi
#() vFuuipu
#() vFuuipp
#() vFuuuii
#() vFuuuiu
#() vFuuuip
#() vFuuuui
#() vFuuuuu
#() vFuuuup
#() vFuuull
#() vFuulll
#() vFuullp
#() vFuulpp
#() vFuupii
#() vFuffff
#() vFudddd
#() vFulill
#() vFullip
#() vFupupi
#() vFuppip
#() vFupppp
#() vFUUppp
#() vFfffff
#() vFddddp
#() vFpiiii
#() vFpiiiI
#() vFpiiiu
#() vFpiiip
#() vFpiiII
#() vFpiiff
#() vFpiipp
#() vFpiIiI
#() vFpiIII
#() vFpipii
#() vFpipiu
#() vFpuiip
#() vFpuipp
#() vFpuuuu
#() vFpuuup
#() vFpuupp
#() vFpuUUu
#() vFpuddd
#() vFpupup
#() vFpUuiu
#() vFpUUuu
#() vFpUUup
#() vFpUUUu
#() vFpUUUp
#() vFpffff
#() vFpdiII
#() vFpddii
#() vFpdddd
#() vFpddpp
#() vFpliil
#() vFplppp
#() vFpLLpp
#() vFppiii
#() vFppiiu
#() vFppiip
#() vFppiup
#() vFppiff
#() vFppipi
#() vFppipp
#() vFppWui
#() vFppuui
#() vFppuuu
#() vFppuup
#() vFppupi
#() vFppupp
#() vFpppii
#() vFpppip
#() vFpppuu
#() vFpppup
#() vFppppi
#() vFppppu
#() vFppppL
#() vFppppp
#() iFEiipp
#() iFEiipV
#() iFEippi
#() iFEippL
#() iFEippp
#() iFEpiii
#() iFEpipi
#() iFEpipp
#() iFEpipV
#() iFEpUup
#() iFEpLpp
#() iFEpLpV
#() iFEpLpA
#() iFEppii
#() iFEppip
#() iFEppiV
#() iFEppiA
#() iFEpplp
#() iFEpppi
#() iFEpppp
#() iFEpppV
#() iFiiipu
#() iFiiipp
#() iFiiupp
#() iFiipup
#() iFiuLip
#() iFiLLLL
#() iFipiii
#() iFipiup
#() iFipipi
#() iFipipu
#() iFipuip
#() iFipuui
#() iFipLup
#() iFippip
#() iFippLi
#() iFippLp
#() iFipppi
#() iFipppp
#() iFuppLp
#() iFpwwww
#() iFpwppp
#() iFpiiii
#() iFpiiiu
#() iFpiiiL
#() iFpiiip
#() iFpiiui
#() iFpiiuu
#() iFpiipi
#() iFpiipp
#() iFpiIip
#() iFpiuwp
#() iFpipii
#() iFpipiL
#() iFpipip
#() iFpippi
#() iFpippW
#() iFpippp
#() iFpCCCC
#() iFpuill
#() iFpuipi
#() iFpuuip
#() iFpuuui
#() iFpuuup
#() iFpuuLL
#() iFpuupp
#() iFpupiU
#() iFpuppp
#() iFplluu
#() iFpLiLi
#() iFpLlpp
#() iFpLppi
#() iFppiiu
#() iFppiip
#() iFppiup
#() iFppiLi
#() iFppiLL
#() iFppipi
#() iFppipp
#() iFppuwp
#() iFppuip
#() iFppupi
#() iFppupp
#() iFppllp
#() iFpplpp
#() iFppLip
#() iFppLpi
#() iFppLpL
#() iFppLpp
#() iFpppii
#() iFpppiL
#() iFpppip
#() iFpppui
#() iFpppLi
#() iFpppLp
#() iFppppi
#() iFppppL
#() iFppppp
#() IFppIII
#() uFEippp
#() uFEpipp
#() uFEppuu
#() uFEpppp
#() uFiuuuu
#() uFipipp
#() uFuiiiu
#() uFpCCCC
#() uFpWuip
#() uFpuuuu
#() uFpupuu
#() uFppiip
#() uFppipp
#() uFppuup
#() uFppupp
#() uFpplip
#() uFppLpp
#() uFppppu
#() uFppppp
#() UFuiiii
#() lFipili
#() lFipLli
#() lFipLLi
#() lFipLpp
#() LFELppi
#() LFEpppp
#() LFpuipp
#() LFpuppi
#() LFpLLLp
#() LFpLppL
#() LFpLppp
#() LFppLLp
#() LFpppii
#() LFppppp
#() pFEpiii
#() pFEpipL
#() pFEpipp
#() pFEpipV
#() pFEpipA
#() pFEpupp
#() pFEppii
#() pFEppip
#() pFEppLp
#() pFEpppi
#() pFEpppu
#() pFEpppp
#() pFiiiii
#() pFipipL
#() pFipppu
#() pFuiiiu
#() pFuiipp
#() pFpiiii
#() pFpiiip
#() pFpiiuu
#() pFpiipi
#() pFpiipp
#() pFpiCCC
#() pFpiuuu
#() pFpippi
#() pFpippp
#() pFpCpup
#() pFpCppp
#() pFpuiii
#() pFpuiip
#() pFpuWWW
#() pFpuuip
#() pFpuuWW
#() pFpuuup
#() pFpuppp
#() pFpUdii
#() pFpdddd
#() pFplppp
#() pFppiii
#() pFppiip
#() pFppiup
#() pFppipi
#() pFppipp
#() pFppuuu
#() pFppuup
#() pFppddi
#() pFppLii
#() pFppLLp
#() pFpppii
#() pFpppip
#() pFpppui
#() pFpppuu
#() pFpppup
#() pFpppLi
#() pFppppi
#() pFppppp
#() vFEiiipp
#() vFEpiLpp
#() vFEpippp
#() vFEpuipp
#() vFEpupup
#() vFEpLLpp
#() vFEppipV
#() vFEppipA
#() vFEppupp
#() vFEppppp
#() vFiiiiii
#() vFiiiuil
#() vFiiuiil
#() vFiililp
#() vFiiplli
#() vFiiplll
#() vFiuippp
#() vFiffiff
#() vFiddidd
#() vFipllli
#() vFuiiiii
#() vFuiiiil
#() vFuiiiip
#() vFuiiilp
#() vFuiiuii
#() vFuiiuup
#() vFuiIIII
#() vFuiuiii
#() vFuiuiip
#() vFuiuiuu
#() vFuiuuip
#() vFuiuuuu
#() vFuiupii
#() vFuiupiu
#() vFuiUUUU
#() vFuiffff
#() vFuidddd
#() vFuuiiii
#() vFuuiiiu
#() vFuuiuii
#() vFuuiuiu
#() vFuuiuup
#() vFuuuiup
#() vFuuuipi
#() vFuuuipp
#() vFuuuuii
#() vFuuuuip
#() vFuuuuuu
#() vFuuuuff
#() vFuuuppi
#() vFuuuppp
#() vFuuffff
#() vFuudddd
#() vFuulppp
#() vFuffiip
#() vFufffff
#() vFuddiip
#() vFulilli
#() vFulilll
#() vFulplup
#() vFupupip
#() vFuppppu
#() vFuppppp
#() vFffffff
#() vFdddddd
#() vFpiiiii
#() vFpiiipp
#() vFpiiuuu
#() vFpiippp
#() vFpiUuup
#() vFpipipV
#() vFpipppi
#() vFpuiiii
#() vFpuiiiu
#() vFpuiipp
#() vFpuuuiu
#() vFpuuppp
#() vFpudddd
#() vFpupuuu
#() vFpupppp
#() vFpUiuup
#() vFpUiUup
#() vFpUipup
#() vFpUUiup
#() vFpdddii
#() vFpddddd
#() vFppiiii
#() vFppiiip
#() vFppiiui
#() vFppiipi
#() vFppiipp
#() vFppilpp
#() vFppippi
#() vFppippp
#() vFppuuuu
#() vFppupii
#() vFppuppp
#() vFppdidd
#() vFpplppi
#() vFpplppp
#() vFppLppi
#() vFppLppp
#() vFpppiii
#() vFpppiip
#() vFpppiff
#() vFpppipu
#() vFpppuii
#() vFppppii
#() vFpppppi
#() vFpppppu
#() vFpppppL
#() vFpppppp
#() cFppLppi
#() iFEiippi
#() iFEiippp
#() iFElpppp
#() iFEpiipp
#() iFEpiipV
#() iFEpilpV
#() iFEpippi
#() iFEpuppp
#() iFEpUppp
#() iFEppppp
#() iFiiiiii
#() iFiiiiip
#() iFiiiuwp
#() iFiuiipi
#() iFipiipi
#() iFipuufp
#() iFipupup
#() iFipuppp
#() iFuppppp
#() iFdipppL
#() iFDipppL
#() iFlpippp
#() iFLppipp
#() iFpiiiii
#() iFpiiiip
#() iFpiiipp
#() iFpiipip
#() iFpiippu
#() iFpiippp
#() iFpiuuup
#() iFpiuupp
#() iFpiUUpp
#() iFpipipi
#() iFpippip
#() iFpipppL
#() iFpipppp
#() iFpCpipu
#() iFpWpppp
#() iFpuiCpp
#() iFpuippp
#() iFpupuui
#() iFpUuupp
#() iFpUUUip
#() iFpUUUUp
#() iFpLLppp
#() iFppiiii
#() iFppiiip
#() iFppiiuu
#() iFppiipi
#() iFppiipp
#() iFppipii
#() iFppipiL
#() iFppipip
#() iFppIipp
#() iFppIppp
#() iFppuiii
#() iFppuiiL
#() iFppuipp
#() iFppuIII
#() iFppuupp
#() iFppupip
#() iFppuppp
#() iFppUipp
#() iFppUUup
#() iFppdidd
#() iFpplppi
#() iFppLupp
#() iFppLpLp
#() iFpppiuu
#() iFpppipi
#() iFpppipp
#() iFpppuii
#() iFpppupu
#() iFpppLpp
#() iFppppii
#() iFppppiu
#() iFppppip
#() iFppppup
#() iFpppppi
#() iFpppppL
#() iFpppppp
#() uFEiippp
#() uFEiuppp
#() uFEpCppp
#() uFEpuppp
#() uFpippup
#() uFpWuwCp
#() uFpWuipp
#() uFpWuuCp
#() uFpuippp
#() uFppippp
#() uFppuuup
#() uFppuupu
#() uFpppppi
#() uFpppppp
#() UFpippup
#() lFEpippp
#() lFipipLu
#() lFipLipu
#() lFipLipp
#() lFipLpLL
#() LFEupppp
#() LFELpppi
#() LFEppppi
#() LFpipipi
#() LFpLippp
#() LFSpLiip
#() pFEpiupp
#() pFEpippp
#() pFEpuipp
#() pFEpuupp
#() pFEpuppp
#() pFEpLLiN
#() pFEppLLp
#() pFEpppLp
#() pFEppppi
#() pFEppppp
#() pFEppppV
#() pFEppApp
#() pFiiiiii
#() pFiCiiCi
#() pFdddddd
#() pFpiiiiu
#() pFpiiCCC
#() pFpiUUUU
#() pFpippip
#() pFpipppp
#() pFpCuuCC
#() pFpCuuWW
#() pFpCuuup
#() pFpuuwwu
#() pFpuuuuu
#() pFpuuupu
#() pFplpppp
#() pFppiiii
#() pFppiipp
#() pFppiCCC
#() pFppippi
#() pFppippp
#() pFpppiii
#() pFpppiui
#() pFpppupp
#() pFppppii
#() pFpppppi
#() pFpppppu
#() pFpppppp
#() pFSpiiii
#() vFEpipppp
#() vFEpuipuV
#() vFEpppppp
#() vFiiiiiip
#() vFiiiiuup
#() vFiiffffp
#() vFiipllli
#() vFuiiiiii
#() vFuiiiuip
#() vFuiiiuup
#() vFuiiliip
#() vFuiililp
#() vFuiuiiii
#() vFuiuiiip
#() vFuiuiiuu
#() vFuiupiiu
#() vFuilliip
#() vFuipiiii
#() vFuipffff
#() vFuipdddd
#() vFuuiiiii
#() vFuuiiiip
#() vFuuiiiui
#() vFuuiiiuu
#() vFuuiiuup
#() vFuuiuiii
#() vFuuipppp
#() vFuuuiiii
#() vFuuuiiip
#() vFuuuiuii
#() vFuuuiupi
#() vFuuuuiip
#() vFuuuuuuu
#() vFuuuufff
#() vFuuuffff
#() vFuuudddd
#() vFuuffiip
#() vFuuddiip
#() vFuuppppu
#() vFuuppppp
#() vFuffffff
#() vFudddddd
#() vFulillli
#() vFulipulp
#() vFulpiill
#() vFlipuiip
#() vFpiiiipp
#() vFpiiliip
#() vFpiipCpp
#() vFpipipii
#() vFpipppii
#() vFpuuuuuu
#() vFpuuUUuu
#() vFpuupppp
#() vFpUiUiup
#() vFpUUUUuu
#() vFpddiidd
#() vFpdddddd
#() vFpLiLiLp
#() vFppiiiii
#() vFppiiiip
#() vFppiiipi
#() vFppiipii
#() vFppiipuu
#() vFppiippp
#() vFppilppi
#() vFppiLiLp
#() vFppipiip
#() vFppipipp
#() vFppipppp
#() vFppLpppi
#() vFppLpppp
#() vFpppiiii
#() vFpppiipi
#() vFpppiipp
#() vFpppippi
#() vFpppuuuu
#() vFppppiii
#() vFppppiip
#() vFppppipi
#() vFpppppip
#() vFppppppi
#() vFppppppp
#() iFEpupppp
#() iFEpUuppp
#() iFEpLiLpV
#() iFEppuppp
#() iFEppLpIi
#() iFEpppiiu
#() iFEpppppL
#() iFEpppppp
#() iFiiiiiip
#() iFpiiiiii
#() iFpiiiiip
#() iFpiiiuwp
#() iFpiiuuiu
#() iFpiipppp
#() iFpiuiipp
#() iFpiupiii
#() iFpiupppp
#() iFpipipip
#() iFpippLpp
#() iFpippppW
#() iFpippppp
#() iFpIIpppp
#() iFpWppppW
#() iFpuiCuCp
#() iFpuuiuui
#() iFpuupppp
#() iFpupuuui
#() iFpupupui
#() iFpuppppp
#() iFpLipipi
#() iFppiiiip
#() iFppiiuui
#() iFppiipii
#() iFppiipiL
#() iFppiuppi
#() iFppipiip
#() iFppipipi
#() iFppipipp
#() iFppippip
#() iFppipppi
#() iFppipppp
#() iFppuipiL
#() iFppLiipp
#() iFpppiiii
#() iFpppiiuu
#() iFpppiiup
#() iFpppiipi
#() iFpppiuwu
#() iFpppippi
#() iFpppippp
#() iFpppuiii
#() iFppppiii
#() iFppppipp
#() iFppppdpi
#() iFpppppip
#() iFpppppup
#() iFppppppi
#() iFppppppp
#() uFEiipppp
#() uFEpiippp
#() uFEpuuppp
#() uFuippppp
#() uFppiuppp
#() uFppuuuup
#() LFEpppppu
#() pFEpLiiii
#() pFEpLiiiI
#() pFEpLiiil
#() pFEppuipp
#() pFEppppip
#() pFEpppppi
#() pFifffppp
#() pFuupupup
#() pFdiiiIiI
#() pFpiiUdii
#() pFpCuwwWW
#() pFpCuWCCC
#() pFpCuuwwp
#() pFpCuuuuu
#() pFpCpWWup
#() pFpuuuwwu
#() pFpuupwwC
#() pFplppppp
#() pFpLppiip
#() pFppiiipp
#() pFppiiCCC
#() pFppiippp
#() pFppipipp
#() pFppuuppp
#() pFppLiiip
#() pFppLipip
#() pFpppccci
#() pFpppiiii
#() pFpppiipp
#() pFpppIIIi
#() pFpppCCCi
#() pFpppuuui
#() pFpppuupp
#() pFpppUUUi
#() pFpppfffi
#() pFpppdddi
#() pFpppllli
#() pFpppLLLi
#() pFppppuuu
#() pFpppppuu
#() pFppppppi
#() pFppppppp
#() vFEiippppV
#() vFEiupippp
#() vFEipAippp
#() vFEppipppp
#() vFEpppuipV
#() vFEpppppuu
#() vFiiiiuuip
#() vFiilliilp
#() vFilipufip
#() vFuiiiiiii
#() vFuiiiiill
#() vFuiiiiuup
#() vFuiuiiiii
#() vFuiuiiiip
#() vFuiulplpp
#() vFuipuliuf
#() vFuuiiiiii
#() vFuuiiiuip
#() vFuuiiiuup
#() vFuuiiuupp
#() vFuuiuiiii
#() vFuuiuiiip
#() vFuuuiiiii
#() vFuuuiuiii
#() vFuuuipipp
#() vFuuuuuuuu
#() vFuuuuufff
#() vFulllplip
#() vFffffffff
#() vFlipuiuip
#() vFpiiiiiii
#() vFpiiiipii
#() vFpiiULipp
#() vFpiUuupup
#() vFpippiiuu
#() vFpippiipi
#() vFpUiUiupi
#() vFpUuuUUUi
#() vFppiiiiii
#() vFppiiipii
#() vFppipipii
#() vFppipppui
#() vFppippppi
#() vFppippppp
#() vFpplppppi
#() vFpplppppp
#() vFppppiipi
#() vFpppppppp
#() iFEpippppp
#() iFEpuuLppp
#() iFEppipppp
#() iFEppppipp
#() iFiiiiiiip
#() iFiiupiupi
#() iFuipuuluf
#() iFuuuuuuuu
#() iFullfpppp
#() iFpCCWWpWu
#() iFpWCuWCuu
#() iFpWWipppp
#() iFpuiipppp
#() iFpuippLpp
#() iFpuuiiiii
#() iFpupppWWu
#() iFpupppppp
#() iFpUuuLpUi
#() iFpdiiiIiI
#() iFpLpipppp
#() iFppiiiiiu
#() iFppIIIppp
#() iFpppiiipi
#() iFpppiippp
#() iFpppipipi
#() iFppppiipi
#() iFppppippp
#() iFppppppii
#() iFpppppppi
#() iFpppppppp
#() uFEipipppp
#() uFEpiupppp
#() uFEppipppp
#() uFEpppuppp
#() uFEppppppp
#() uFuipppppp
#() uFpupuuuCp
#() uFppuuuupp
#() uFppuuuppi
#() uFppuppppp
#() LFELpLpLpi
#() LFEpiupppp
#() pFEpiuCppp
#() pFEppLiiip
#() pFEpppuipV
#() pFEpppppiV
#() pFEppppppi
#() pFEppppppp
#() pFiipppppp
#() pFuiiiuuuu
#() pFuupupipp
#() pFpiiiiiuu
#() pFpiUdiiUi
#() pFpipiiiip
#() pFpipppppp
#() pFpCCuuwwC
#() pFpCuwwWWu
#() pFpCuuuCup
#() pFpWWiCpup
#() pFpuuWWCuu
#() pFpuuuuupp
#() pFpuuuupup
#() pFpuuupwwp
#() pFpdwwWWui
#() pFplpppppp
#() pFppiiiiii
#() pFpppuuLLu
#() pFpppppupp
#() vFEpiiiiipp
#() vFEpippippV
#() vFEpippippA
#() vFEppiipppp
#() vFEpppiippp
#() vFiiiiiiiii
#() vFiiiiillli
#() vFuiiiiiiii
#() vFuiiiiiuip
#() vFuiiiiiuup
#() vFuiiiillli
#() vFuiiilliip
#() vFuiiillilp
#() vFuiuiiiiip
#() vFuuiiiiiii
#() vFuuiuiiiii
#() vFuuiuiiiip
#() vFuuiuiiuup
#() vFuuuiiiiip
#() vFuuuuuuuuu
#() vFuffffffff
#() vFffuuuufff
#() vFddddddddd
#() vFlipuiuiip
#() vFpipiuiipp
#() vFpipippppi
#() vFpipppiipi
#() vFppiiiiiii
#() vFppiiiiipi
#() vFppiiipiii
#() vFppiipiiii
#() vFppipppiii
#() vFppipppiip
#() vFppuuiiiii
#() vFpplpppppi
#() vFpppiiiiii
#() vFppppipiip
#() vFpppppippp
#() iFEpiiiiipi
#() iFEpppipppp
#() iFEppplPPPP
#() iFEpppppupp
#() iFEppPPPPPP
#() iFiiiiiiiip
#() iFiiiipiiip
#() iFipiipippi
#() iFuilpluluf
#() iFdddpppppp
#() iFpipLpiiip
#() iFpuuuuuuuu
#() iFpdiiiUiUp
#() iFppiiiiiii
#() iFppiuiippL
#() iFppLpiippp
#() iFpppiiipip
#() iFpppiiuuii
#() iFpppiipiiu
#() iFppppiiupp
#() iFppppppppu
#() iFppppppppp
#() uFEipippppp
#() uFEpppufppp
#() uFppppppppp
#() LFEppppppii
#() pFEppiiuuLi
#() pFEppuippuu
#() pFEpppppiiV
#() pFEpppppppi
#() pFEpppppppp
#() pFpiiiiuuuu
#() pFpCuWCCuuu
#() pFpuuwwWWww
#() pFpupuuuuup
#() pFppiiiiiip
#() pFppiiuuuLL
#() pFppipppppp
#() pFpppiiiiii
#() pFpppiipppp
#() pFpppppiipp
#() vFEiippppppp
#() vFEpippppppp
#() vFEpppiipppp
#() vFiiiiiiiiiu
#() vFuiiiiiiiii
#() vFuiiiiiiill
#() vFuiiiiiiuup
#() vFuiiiillllp
#() vFuiuiiiiuup
#() vFuipulipiuf
#() vFuuiiiiiiii
#() vFuuiiiiiuip
#() vFuuiiiiiuup
#() vFuuiuiiiiip
#() vFuuiuiiiuup
#() vFuuuuuuuiii
#() vFuuuuuuuuuu
#() vFuffiiffiip
#() vFuddiiddiip
#() vFffffffffff
#() vFpipippppip
#() vFppiiiiiiii
#() vFppiiiiipip
#() vFppiipppiip
#() vFppiippppii
#() vFppipppiiii
#() vFppuuuuiiuu
#() vFppdddddddd
#() vFpppppppppp
#() iFEpiiiiippp
#() iFEpupppLppL
#() iFEppppppipp
#() iFEppppppppp
#() iFiiiiiiiiip
#() iFpiipiiipip
#() iFpuupiuiipp
#() iFpddpippppp
#() iFppuuiiiiii
#() iFppuuiiuupi
#() iFpppiiipipi
#() iFpppLLipppp
#() iFppppiiuuii
#() iFpppppppipi
#() uFpppppppppp
#() pFEiippppppp
#() pFEpiiiiiipp
#() pFEpippppppp
#() pFpCuWCCuuCW
#() pFpuwwWWuCuu
#() pFpuuuwwwwWW
#() pFpuuuWWWCCi
#() pFplllllllll
#() pFppuiipuuii
#() pFpppppppppp
#() vFEpiiiupupup
#() vFuiiiiiiiiip
#() vFuiiiiiiiuip
#() vFuiiiiiiiuup
#() vFuiiiillliip
#() vFuiiiilllilp
#() vFuiuiiiiiuup
#() vFuuiuiiiiuup
#() vFuuuuuuuuuuu
#() vFuuupupppppp
#() vFuuffiiffiip
#() vFuufffffffff
#() vFuuddiiddiip
#() vFuffffffffff
#() vFpipipiipiii
#() vFpipppiiiipi
#() vFpupiiupupup
#() vFppiiiiiiiii
#() vFppiiiiipiii
#() vFppiiiiddddi
#() vFppiipppiiii
#() vFppipppiiiii
#() vFppipppuiiii
#() vFppppppppppp
#() iFEpppipppppp
#() iFEppppiiiiuu
#() iFiiiiiiiiiip
#() iFpiippiiipip
#() iFppippipppip
#() iFppppiiuuiiL
#() uFEpLiupppLuV
#() uFEpLippppLup
#() uFEpLippppLuA
#() uFEppppppippp
#() uFppppppppppp
#() pFEpipppppppi
#() pFEppiiLpppip
#() pFEppuiipuuii
#() pFpppppppiipp
#() pFppppppppppp
#() vFuiiiillliilp
#() vFuuiiiiiiiiui
#() vFuuiiiiiiiuip
#() vFuuiiiiiiiuup
#() vFuuuuuuuuuuuu
#() vFffffffffffff
#() vFpipppiiiipii
#() vFpippppiiiipi
#() vFppiiiiddddii
#() vFppiiuuuiupup
#() vFppiipppiiiii
#() vFpppiiiiiiiii
#() vFpppppppppppp
#() iFEpppippppppp
#() iFEppppiiiiuui
#() iFpipllipppppp
#() iFpipppppppppp
#() iFpppllipppppp
#() iFpppppppppppp
#() pFEppiiuuuipii
#() pFEppppppppppp
#() pFWWiCCCCiipup
#() pFpCuuWWwwCCup
#() pFpuuuWWWWWWWW
#() pFppiiuuuiupLp
#() pFpppppppppppp
#() vFEpppppppiippp
#() vFuiiiiiiiiiuup
#() vFuuuuuuuuuuuuu
#() vFuffffffffffff
#() vFpipppiiiiiiuu
#() vFpippppppppppp
#() vFppiiiiiiiiiii
#() vFppiipppiiiiii
#() vFppppppppppppp
#() iFddddpppddpppp
#() iFpippuuuiipppp
#() iFpupiiiipppppp
#() uFppppuuupppppp
#() pFpCuuwwWWWWuup
#() pFpuupppwwwwWWC
#() pFppppppppppppp
#() vFuffiiffiiffiip
#() vFuddiiddiiddiip
#() vFppiipppiiiiiii
#() iFpipppppppppppp
#() vFuuiiiiuuiiiiiii
#() vFfffffffffffffff
#() vFpppippppppppppp
#() vFppppppppppppppp
#() pFpuiippppppppppp
#() pFppipppppppppppp
#() pFppppppppppppppp
#() vFpppppppppppppppp
#() iFpppppppppppppppp
#() pFpuuWWWWWWwwCCCuu
#() pFppipipipipipipip
#() vFppiiiiddddiiiiiuu
#() pFppippipipipipipip
#() vFppuiiiiipuiiiiiiii
#() vFpppipppppppppppppp
#() iFpppppppppppppppppp
#() LFpppppppppppppppppp
#() pFippppppppppppppppp
#() vFpiiiiiiiiiiiiiiiiii
#() pFiiiippppppppppppppp
#() pFpippppppppppppppppp
#() iFpppppppppppppppppppppp
#() iFpppppppppppppppppppppppppppppppppp
#defined(HAVE_LD80BITS) DFD
#defined(HAVE_LD80BITS) vFppippDDC
#!defined(HAVE_LD80BITS) KFK
#!defined(HAVE_LD80BITS) KFKK
#!defined(HAVE_LD80BITS) KFKp
#!defined(HAVE_LD80BITS) vFppippKKC
#defined(NOALIGN) iFipiip
#!defined(NOALIGN) iFELp
#!defined(NOALIGN) iFEppu
#!defined(NOALIGN) iFEiiip
#!defined(NOALIGN) iFEipii
#!defined(NOALIGN) iFEipiip
#() vFEv -> vFE
#() iFEv -> iFE
#() lFEv -> lFE
#() pFEv -> pFE
#() iFEvpp -> iFEpp
#() pFEppv -> pFEpp
#() iFEpvpp -> iFEppp
#() iFEpvvppp -> iFEpppp
#() iFEpLvvpp -> iFEpLpp
#() iFEpuvvppp -> iFEpuppp
wrappedalure:
wrappedalut:
wrappedandroidshmem:
wrappedatk:
- vFp:
  - atk_focus_tracker_init
- uFp:
  - atk_add_focus_tracker
- uFpp:
  - atk_add_key_event_listener
wrappedatkbridge:
wrappedatspi:
wrappedbz2:
- iFp:
  - BZ2_bzCompressEnd
  - BZ2_bzDecompress
  - BZ2_bzDecompressEnd
- iFpi:
  - BZ2_bzCompress
- iFpii:
  - BZ2_bzDecompressInit
- iFpiii:
  - BZ2_bzCompressInit
wrappedcairo:
wrappedcrashhandler:
wrappedcrypto:
- vFp:
  - CRYPTO_set_id_callback
  - CRYPTO_set_locking_callback
- pFp:
  - sk_new
- vFpp:
  - sk_pop_free
- pFpppp:
  - PEM_read_bio_DSAPrivateKey
  - PEM_read_bio_DSA_PUBKEY
  - PEM_read_bio_ECPrivateKey
  - PEM_read_bio_EC_PUBKEY
  - PEM_read_bio_RSAPrivateKey
  - PEM_read_bio_RSA_PUBKEY
- iFpiipp:
  - ENGINE_ctrl
- iFpplppi:
  - ENGINE_ctrl_cmd
- iFppppipp:
  - PEM_write_bio_DSAPrivateKey
  - PEM_write_bio_ECPrivateKey
  - PEM_write_bio_RSAPrivateKey
wrappedcurl:
- uFpup:
  - curl_easy_setopt
wrappeddbus:
- vFppp:
  - dbus_connection_remove_filter
  - dbus_timeout_set_data
  - dbus_watch_set_data
- iFpiV:
  - dbus_message_append_args
- iFpiA:
  - dbus_message_append_args_valist
- vFpppp:
  - dbus_connection_set_dispatch_status_function
  - dbus_connection_set_wakeup_main_function
- iFpipp:
  - dbus_connection_set_data
  - dbus_message_set_data
  - dbus_pending_call_set_data
- iFppip:
  - dbus_message_get_args
- iFppiA:
  - dbus_message_get_args_valist
- iFpppp:
  - dbus_connection_add_filter
  - dbus_pending_call_set_notify
- iFppppp:
  - dbus_connection_try_register_fallback
  - dbus_connection_try_register_object_path
- iFpppppp:
  - dbus_connection_set_timeout_functions
  - dbus_connection_set_watch_functions
wrappeddbusglib1:
- vFppp:
  - dbus_g_type_collection_value_iterate
  - dbus_g_type_map_value_iterate
- vFpppp:
  - dbus_g_proxy_disconnect_signal
- vFppppp:
  - dbus_g_proxy_connect_signal
- pFpppppiV:
  - dbus_g_proxy_begin_call
- pFpppppiiV:
  - dbus_g_proxy_begin_call_with_timeout
wrappedexpat:
- vFpp:
  - XML_SetCharacterDataHandler
- vFppp:
  - XML_SetElementHandler
wrappedfaudio:
- vFpp:
  - FAudio_UnregisterForCallbacks
- uFpp:
  - FAudio_RegisterForCallbacks
- vFppp:
  - FAudio_SetEngineProcedureEXT
- uFpCppp:
  - FAudioCOMConstructWithCustomAllocatorEXT
- uFpuppp:
  - FAudioCreateReverb9WithCustomAllocatorEXT
  - FAudioCreateReverbWithCustomAllocatorEXT
  - FAudioCreateVolumeMeterWithCustomAllocatorEXT
- uFpuuppp:
  - FAudioCreateWithCustomAllocatorEXT
- uFpppuppp:
  - FAPOFX_CreateFXWithCustomAllocatorEXT
- uFpppufppp:
  - FAudio_CreateSourceVoice
wrappedflac:
- iFppPPPPPP:
  - FLAC__metadata_chain_read_with_callbacks
- iFppppppppp:
  - FLAC__stream_decoder_init_stream
wrappedfontconfig:
wrappedfreetype:
- iFpplp:
  - FT_Open_Face
- iFpuuLppp:
  - FTC_Manager_New
wrappedgbm:
wrappedgconf2:
wrappedgdkpixbuf2:
- pFpiiiiiipp:
  - gdk_pixbuf_new_from_data
wrappedgdkx112:
- vFpp:
  - gdk_init
- iFpp:
  - gdk_init_check
- vFppp:
  - gdk_event_handler_set
  - gdk_window_add_filter
  - gdk_window_remove_filter
- iFiipp:
  - gdk_input_add
- iFiippp:
  - gdk_input_add_full
wrappedgio2:
- vFppp:
  - g_simple_async_result_set_op_res_gpointer
- vFippp:
  - g_bus_get
- vFppip:
  - g_simple_async_result_run_in_thread
- vFpppp:
  - g_dbus_connection_close
  - g_dbus_connection_flush
  - g_simple_async_report_gerror_in_idle
  - g_simple_async_report_take_gerror_in_idle
- uFpppp:
  - g_dbus_connection_add_filter
- LFpppp:
  - g_cancellable_connect
- pFpppp:
  - g_simple_async_result_new
  - g_simple_async_result_new_from_error
  - g_simple_async_result_new_take_error
- vFpippp:
  - g_async_initable_init_async
- vFppipV:
  - g_simple_async_result_set_error
- vFppipA:
  - g_simple_async_result_set_error_va
- pFppppV:
  - g_initable_new
- pFppApp:
  - g_initable_new_valist
- vFpipppp:
  - g_dbus_connection_new_for_address
- vFiippppV:
  - g_async_initable_new_async
- vFiupippp:
  - g_async_initable_newv_async
- vFipAippp:
  - g_async_initable_new_valist_async
- vFppipppp:
  - g_dbus_connection_new
- vFpppuipV:
  - g_simple_async_report_error_in_idle
- uFipipppp:
  - g_bus_watch_name
- uFppipppp:
  - g_bus_own_name_on_connection
  - g_bus_watch_name_on_connection
- uFppppppp:
  - g_dbus_connection_register_object
- pFpppuipV:
  - g_simple_async_result_new_error
- vFppiipppp:
  - g_dbus_connection_send_message_with_reply
- vFpppiippp:
  - g_dbus_proxy_call
- uFipippppp:
  - g_bus_own_name
- vFiippppppp:
  - g_dbus_proxy_new_for_bus
- vFpippppppp:
  - g_dbus_proxy_new
- vFpppiipppp:
  - g_dbus_proxy_call_with_unix_fd_list
- pFiippppppp:
  - g_dbus_object_manager_client_new_for_bus_sync
- uFppppppippp:
  - g_dbus_connection_signal_subscribe
- vFpppppppiippp:
  - g_dbus_connection_call
wrappedglib2:
- vFp:
  - g_atexit
- pFp:
  - g_completion_new
  - g_main_context_get_poll_func
  - g_private_new
  - g_ptr_array_new_with_free_func
  - g_set_print_handler
  - g_set_printerr_handler
- vFpp:
  - g_array_set_clear_func
  - g_array_sort
  - g_completion_set_compare
  - g_list_free_full
  - g_main_context_set_poll_func
  - g_ptr_array_set_free_func
  - g_ptr_array_sort
  - g_source_set_funcs
  - g_thread_foreach
- vFpV:
  - g_print
  - g_printerr
- iFpp:
  - g_source_remove_by_funcs_user_data
- iFpV:
  - g_printf
- iFpA:
  - g_vprintf
- uFpp:
  - g_idle_add
- LFpA:
  - g_printf_string_upper_bound
- pFup:
  - g_ptr_array_new_full
- pFpu:
  - g_source_new
- pFpp:
  - g_hash_table_new
  - g_list_sort
  - g_log_set_default_handler
  - g_slist_sort
  - g_strjoinv
  - g_variant_new_parsed_va
- pFpV:
  - g_build_filename
  - g_markup_printf_escaped
  - g_strconcat
  - g_strdup_printf
  - g_strjoin
  - g_variant_new
- pFpA:
  - g_markup_vprintf_escaped
  - g_strdup_vprintf
- vFppp:
  - g_array_sort_with_data
  - g_hash_table_foreach
  - g_option_context_add_main_entries
  - g_ptr_array_foreach
  - g_ptr_array_sort_with_data
  - g_static_private_set
- vFppV:
  - g_string_append_printf
  - g_string_printf
  - g_variant_get
- vFppA:
  - g_string_append_vprintf
  - g_string_vprintf
- iFppV:
  - g_fprintf
  - g_sprintf
- iFppA:
  - g_vasprintf
  - g_vfprintf
  - g_vsprintf
- uFipp:
  - g_child_watch_add
- uFupp:
  - g_timeout_add
  - g_timeout_add_seconds
- uFppp:
  - g_hash_table_foreach_remove
  - g_hash_table_foreach_steal
- pFppp:
  - g_hash_table_find
  - g_list_find_custom
  - g_list_sort_with_data
  - g_queue_find_custom
  - g_slist_find_custom
  - g_slist_foreach
  - g_slist_insert_sorted
  - g_slist_sort_with_data
  - g_variant_new_va
- pFppV:
  - g_build_path
- vFpipV:
  - g_log
- vFpipA:
  - g_logv
- vFpupp:
  - g_datalist_id_set_data_full
- vFpppp:
  - g_source_set_callback
- iFpLpV:
  - g_snprintf
- iFpLpA:
  - g_vsnprintf
- uFippp:
  - g_idle_add_full
- uFpipp:
  - g_io_add_watch
  - g_log_set_handler
- pFpipV:
  - g_error_new
- pFpipA:
  - g_error_new_valist
- pFpupp:
  - g_datalist_id_dup_data
- pFppip:
  - g_thread_create
- pFpppp:
  - g_hash_table_new_full
  - g_slist_insert_sorted_with_data
- vFpiLpp:
  - g_qsort_with_data
- vFppipV:
  - g_set_error
- uFiippp:
  - g_child_watch_add_full
- uFiuppp:
  - g_timeout_add_full
  - g_timeout_add_seconds_full
- pFppppp:
  - g_option_group_new
- iFpupppp:
  - g_datalist_id_replace_data
- uFpiippp:
  - g_io_add_watch_full
- pFppuipp:
  - g_variant_new_from_data
- pFppLiiip:
  - g_thread_create_full
- iFpppipppp:
  - g_spawn_async
- iFpppipppppp:
  - g_spawn_sync
- iFpppippppppp:
  - g_spawn_async_with_pipes
wrappedgmodule2:
wrappedgmp:
wrappedgnutls:
- vFp:
  - gnutls_global_set_log_function
- vFpp:
  - gnutls_transport_set_pull_function
  - gnutls_transport_set_push_function
wrappedgobject2:
- pFp:
  - g_type_class_peek_parent
- iFpp:
  - g_param_type_register_static
- pFpp:
  - g_value_array_sort
- vFiip:
  - g_value_register_transform_func
- vFLLp:
  - g_type_add_interface_static
- vFpup:
  - g_object_class_install_properties
- vFppp:
  - g_object_weak_ref
- vFppV:
  - g_object_get
  - g_object_set
- vFppA:
  - g_object_get_valist
  - g_object_set_valist
- LFppp:
  - g_boxed_type_register_static
- pFLpV:
  - g_object_new
- pFLpA:
  - g_object_new_valist
- pFppp:
  - g_value_array_sort_with_data
- pFppV:
  - g_object_connect
- vFpuuV:
  - g_signal_emit
- vFpupp:
  - g_param_spec_set_qdata_full
- vFpupA:
  - g_signal_emit_valist
- vFpppp:
  - g_object_set_data_full
  - g_object_set_qdata_full
- LFLppi:
  - g_type_register_static
- LFupppp:
  - g_signal_add_emission_hook
- LFLpppi:
  - g_type_register_fundamental
- LFppppi:
  - g_signal_connect_object
- LFpppppu:
  - g_signal_connect_data
- uFpiupppp:
  - g_signal_handlers_block_matched
  - g_signal_handlers_disconnect_matched
  - g_signal_handlers_unblock_matched
- LFLpLpLpi:
  - g_type_register_static_simple
- LFpiupppp:
  - g_signal_handler_find
- uFpLiupppLuV:
  - g_signal_new
- uFpLippppLup:
  - g_signal_newv
- uFpLippppLuA:
  - g_signal_new_valist
wrappedgssapi:
wrappedgssapikrb5:
wrappedgstapp:
wrappedgstaudio:
wrappedgstbase:
wrappedgstreamer:
- vFppV:
  - gst_caps_set_simple
  - gst_structure_remove_fields
- vFppA:
  - gst_caps_set_simple_valist
  - gst_structure_remove_fields_valist
- iFppV:
  - gst_structure_get
- iFppA:
  - gst_structure_get_valist
- vFpppp:
  - gst_bus_set_sync_handler
  - gst_pad_set_activatemode_function_full
  - gst_pad_set_chain_function_full
  - gst_pad_set_event_function_full
  - gst_pad_set_getrange_function_full
  - gst_pad_set_query_function_full
- vFpippippV:
  - gst_debug_log
- vFpippippA:
  - gst_debug_log_valist
wrappedgsttag:
wrappedgstvideo:
wrappedgthread2:
- vFp:
  - g_thread_init
  - g_thread_init_with_errorcheck_mutexes
wrappedgtkx112:
- fFp:
  - gtk_spin_button_get_value_as_float
- pFi:
  - gtk_type_class
- vFpp:
  - gtk_builder_connect_signals
  - gtk_init
- iFpp:
  - gtk_init_check
  - gtk_type_unique
- pFiV:
  - gtk_list_store_new
  - gtk_tree_store_new
- pFpi:
  - gtk_type_check_object_cast
- vFppp:
  - gtk_builder_connect_signals_full
  - gtk_clipboard_request_text
  - gtk_container_forall
  - gtk_container_foreach
  - gtk_menu_attach_to_widget
  - gtk_tree_model_foreach
  - gtk_tree_selection_selected_foreach
- vFppV:
  - gtk_dialog_add_buttons
  - gtk_list_store_set
  - gtk_message_dialog_format_secondary_markup
  - gtk_message_dialog_format_secondary_text
  - gtk_tree_model_get
  - gtk_widget_style_get
- vFppA:
  - gtk_list_store_set_valist
  - gtk_tree_model_get_valist
  - gtk_widget_style_get_valist
- uFupp:
  - gtk_timeout_add
- pFppp:
  - gtk_link_button_set_uri_hook
- vFppiV:
  - gtk_list_store_insert_with_values
- vFppup:
  - gtk_action_group_add_actions
- vFpppp:
  - gtk_clipboard_request_contents
  - gtk_object_set_data_full
  - gtk_stock_set_translate_func
  - gtk_tree_sortable_set_default_sort_func
  - gtk_tree_view_set_search_equal_func
- iFpppp:
  - gtk_text_iter_backward_find_char
  - gtk_text_iter_forward_find_char
- LFpppp:
  - gtk_signal_connect
- vFpippp:
  - gtk_tree_sortable_set_sort_func
- vFppupp:
  - gtk_action_group_add_actions_full
- vFppppp:
  - gtk_cell_layout_set_cell_data_func
  - gtk_tree_view_column_set_cell_data_func
- vFpuipuV:
  - gtk_binding_entry_add_signal
- iFppuppp:
  - gtk_clipboard_set_with_data
  - gtk_clipboard_set_with_owner
- iFpppppp:
  - gtk_init_with_args
- uFiipppp:
  - gtk_input_add_full
- vFpppppuu:
  - gtk_menu_popup
- pFppppppi:
  - gtk_toolbar_insert_stock
- pFppppppp:
  - gtk_toolbar_append_item
  - gtk_toolbar_prepend_item
- LFppppppii:
  - gtk_signal_connect_full
- pFpppppppi:
  - gtk_toolbar_insert_item
- pFpippppppp:
  - gtk_toolbar_append_element
  - gtk_toolbar_prepend_element
- pFpipppppppi:
  - gtk_toolbar_insert_element
wrappedkrb5:
- iFppppppipp:
  - krb5_get_init_creds_password
wrappedlber:
wrappedldapr:
- iFpppppupp:
  - ldap_sasl_interactive_bind_s
wrappedldlinux:
- pFp:
  - __tls_get_addr
wrappedlibasound:
- iFp:
  - snd_dlclose
  - snd_lib_error_set_handler
- pFppp:
  - snd_dlsym
- iFpipp:
  - snd_async_add_handler
- iFpppp:
  - snd_async_add_pcm_handler
- pFpipL:
  - snd_dlopen
wrappedlibc:
- vFv:
  - _Jv_RegisterClasses
  - __stack_chk_fail
- vFp:
  - _ITM_deregisterTMCloneTable
  - __cxa_finalize
- iFv:
  - fork
  - vfork
- iFi:
  - iopl
- iFp:
  - _setjmp
  - getcontext
  - setcontext
  - setjmp
  - stime
  - uname
- lFv:
  - syscall
- LFL:
  - getauxval
- pFL:
  - malloc
- pFp:
  - __deregister_frame_info
  - mallinfo
- vFpi:
  - __longjmp_chk
  - _longjmp
  - _obstack_newchunk
  - longjmp
  - siglongjmp
- vFpu:
  - _ITM_registerTMCloneTable
- vFpp:
  - __register_frame_info
  - tdestroy
- vFpV:
  - warn
  - warnx
- iFip:
  - fstat64
- iFpi:
  - __sigsetjmp
  - backtrace
- iFpL:
  - munmap
- iFpp:
  - __vprintf_chk
  - dl_iterate_phdr
  - execv
  - execvp
  - sigaltstack
  - swapcontext
- iFpV:
  - __isoc99_scanf
  - execl
  - execlp
  - printf
- iFpA:
  - vprintf
- iFSp:
  - _IO_file_stat
- pFip:
  - __sysv_signal
  - signal
  - sigset
  - sysv_signal
- pFpi:
  - backtrace_symbols
- pFpp:
  - __realpath_chk
  - fopen
  - fopen64
  - realpath
- vFipV:
  - err
  - errx
  - syslog
- vFipA:
  - vsyslog
- vFpii:
  - backtrace_symbols_fd
- vFpup:
  - _ITM_addUserCommitAction
- iFiip:
  - __fxstat
  - __fxstat64
- iFiiN:
  - __fcntl
  - fcntl
  - fcntl64
- iFipp:
  - __lxstat
  - __lxstat64
  - __sigaction
  - __xstat
  - __xstat64
  - getopt
  - sigaction
- iFipV:
  - __printf_chk
- iFpLi:
  - mprotect
- iFppi:
  - ftw
  - ftw64
- iFppp:
  - __cxa_atexit
  - __cxa_thread_atexit_impl
  - __isoc99_vfscanf
  - __isoc99_vsscanf
  - __vfprintf_chk
  - __vsscanf
  - execve
- iFppV:
  - __asprintf
  - __isoc99_fscanf
  - __isoc99_sscanf
  - asprintf
  - fprintf
  - fscanf
  - fwprintf
  - sprintf
  - sscanf
  - swscanf
- iFppA:
  - obstack_vprintf
  - vasprintf
  - vfprintf
  - vfscanf
  - vsprintf
  - vsscanf
  - vswscanf
- iFpOu:
  - __open
  - open
  - open64
- lFppL:
  - readlink
- pFpip:
  - fts_open
- pFppp:
  - tsearch
- vFiipV:
  - __syslog_chk
- vFiipA:
  - __vsyslog_chk
- vFpLLp:
  - qsort
- vFpppp:
  - __libc_init
- iFiiip:
  - epoll_ctl
- iFiiiN:
  - semctl
- iFipii:
  - epoll_wait
- iFippi:
  - fstatat
- iFippL:
  - readlinkat
- iFpipp:
  - __vasprintf_chk
  - glob
  - glob64
- iFpipV:
  - __asprintf_chk
  - __fprintf_chk
- iFpLpp:
  - __vsnprintf_chk
- iFpLpV:
  - __snprintf
  - snprintf
  - swprintf
- iFpLpA:
  - __vsnprintf
  - vsnprintf
  - vswprintf
- iFppii:
  - nftw64
- iFppiV:
  - makecontext
- iFpppp:
  - __register_atfork
  - __vsprintf_chk
  - scandir
  - scandir64
- vFpLLpp:
  - qsort_r
- iFiippi:
  - __fxstatat
  - __fxstatat64
- iFipiip:
  - epoll_pwait
- iFipppp:
  - getopt_long
  - getopt_long_only
  - scandirat
- iFpilpV:
  - __sprintf_chk
- iFpuppp:
  - __vswprintf_chk
- pFpLLiN:
  - mremap
- pFppLLp:
  - bsearch
- pFpppLp:
  - lfind
  - lsearch
- iFpLiLpV:
  - __snprintf_chk
  - __swprintf_chk
- iFpppppp:
  - posix_spawn
  - posix_spawnp
- pFpLiiil:
  - mmap
  - mmap64
- iFpippppp:
  - __libc_start_main
- iFppipppp:
  - clone
wrappedlibcrypt:
wrappedlibcups:
wrappedlibdl:
- iFp:
  - dlclose
- pFv:
  - dlerror
- iFpp:
  - dladdr
- pFpi:
  - dlopen
- pFpp:
  - dlsym
- iFpip:
  - dlinfo
- pFppi:
  - dlmopen
- pFppp:
  - dlvsym
- iFpppi:
  - dladdr1
wrappedlibdrm:
wrappedlibegl:
- pFp:
  - eglGetProcAddress
wrappedlibform:
wrappedlibformw:
wrappedlibfuse:
- iFpppp:
  - fuse_opt_parse
- pFppLp:
  - fuse_lowlevel_new
wrappedlibgl:
- iFi:
  - glXSwapIntervalMESA
- pFp:
  - glXGetProcAddress
  - glXGetProcAddressARB
- vFpp:
  - glDebugMessageCallback
  - glDebugMessageCallbackAMD
  - glDebugMessageCallbackARB
- vFipp:
  - glProgramCallbackMESA
wrappedlibglu:
- vFpip:
  - gluNurbsCallback
  - gluQuadricCallback
  - gluTessCallback
wrappedlibice:
wrappedlibm:
- UFV:
  - cacosf
  - cacoshf
  - casinf
  - casinhf
  - catanf
  - catanhf
- fFf:
  - __acosf_finite
  - __acoshf_finite
  - __asinf_finite
  - __coshf_finite
  - __exp2f_finite
  - __expf_finite
  - __log10f_finite
  - __log2f_finite
  - __logf_finite
  - __sinhf_finite
  - __sqrtf_finite
- dFd:
  - __acos_finite
  - __acosh_finite
  - __asin_finite
  - __cosh_finite
  - __exp2_finite
  - __exp_finite
  - __log10_finite
  - __log2_finite
  - __log_finite
  - __sinh_finite
  - __sqrt_finite
- fFff:
  - __atan2f_finite
  - __hypotf_finite
  - __powf_finite
- dFdd:
  - __atan2_finite
  - __hypot_finite
  - __pow_finite
wrappedlibncurses:
- pFv:
  - initscr
- iFpV:
  - printw
- iFppA:
  - vwprintw
- iFiipV:
  - mvprintw
- iFpiipV:
  - mvwprintw
wrappedlibncurses6:
- pFv:
  - initscr
- iFpV:
  - printw
- iFppA:
  - vwprintw
- iFiipV:
  - mvprintw
- iFpiipV:
  - mvwprintw
wrappedlibncursesw:
- pFv:
  - initscr
- iFpV:
  - printw
- iFppA:
  - vwprintw
- iFiipV:
  - mvprintw
- iFpiipV:
  - mvwprintw
wrappedlibncursesw6:
- pFv:
  - initscr
- iFpV:
  - printw
- iFppA:
  - vwprintw
- iFiipV:
  - mvprintw
- iFpiipV:
  - mvwprintw
wrappedlibogg:
wrappedlibpanel:
wrappedlibpci:
wrappedlibpcre:
wrappedlibpthread:
- vFp:
  - __pthread_register_cancel
  - __pthread_unregister_cancel
  - __pthread_unwind_next
- iFp:
  - __pthread_mutex_destroy
  - __pthread_mutex_lock
  - __pthread_mutex_trylock
  - __pthread_mutex_unlock
  - __pthread_mutexattr_destroy
  - __pthread_mutexattr_init
  - pthread_attr_destroy
  - pthread_attr_init
  - pthread_barrierattr_destroy
  - pthread_barrierattr_init
  - pthread_condattr_destroy
  - pthread_condattr_init
  - pthread_mutex_destroy
  - pthread_mutex_lock
  - pthread_mutex_trylock
  - pthread_mutex_unlock
  - pthread_mutexattr_destroy
  - pthread_mutexattr_init
- vFpi:
  - _pthread_cleanup_pop
  - _pthread_cleanup_pop_restore
- iFLp:
  - pthread_getattr_np
- iFpi:
  - __pthread_mutexattr_settype
  - pthread_attr_setdetachstate
  - pthread_attr_setinheritsched
  - pthread_attr_setschedpolicy
  - pthread_attr_setscope
  - pthread_barrierattr_setpshared
  - pthread_condattr_setclock
  - pthread_condattr_setpshared
  - pthread_kill
  - pthread_mutexattr_setkind_np
  - pthread_mutexattr_setprotocol
  - pthread_mutexattr_setpshared
  - pthread_mutexattr_settype
- iFpL:
  - pthread_attr_setguardsize
  - pthread_attr_setstacksize
- iFpp:
  - __pthread_key_create
  - __pthread_mutex_init
  - __pthread_once
  - pthread_attr_getdetachstate
  - pthread_attr_getguardsize
  - pthread_attr_getinheritsched
  - pthread_attr_getschedparam
  - pthread_attr_getschedpolicy
  - pthread_attr_getscope
  - pthread_attr_getstackaddr
  - pthread_attr_getstacksize
  - pthread_attr_setschedparam
  - pthread_attr_setstackaddr
  - pthread_barrierattr_getpshared
  - pthread_cond_init
  - pthread_cond_wait
  - pthread_condattr_getclock
  - pthread_condattr_getpshared
  - pthread_key_create
  - pthread_mutex_init
  - pthread_mutex_timedlock
  - pthread_mutexattr_getkind_np
  - pthread_mutexattr_getprotocol
  - pthread_mutexattr_gettype
  - pthread_once
- vFppp:
  - _pthread_cleanup_push
  - _pthread_cleanup_push_defer
- iFpLp:
  - pthread_attr_setaffinity_np
  - pthread_getaffinity_np
  - pthread_setaffinity_np
- iFppu:
  - pthread_barrier_init
- iFppL:
  - pthread_attr_setstack
- iFppp:
  - __pthread_atfork
  - pthread_atfork
  - pthread_attr_getstack
  - pthread_cond_timedwait
- iFpppp:
  - pthread_create
wrappedlibresolv:
wrappedlibrt:
- iFupp:
  - timer_create
wrappedlibsm:
- iFppp:
  - SmcRequestSaveYourselfPhase2
- iFpipp:
  - SmcInteractRequest
- pFppiiLpppip:
  - SmcOpenConnection
wrappedlibsndfile:
- iFp:
  - sf_close
- pFpipp:
  - sf_open_virtual
wrappedlibssl:
- vFpp:
  - SSL_CTX_set_default_passwd_cb
  - SSL_set_psk_client_callback
- vFpip:
  - SSL_CTX_set_verify
  - SSL_set_verify
- vFppp:
  - SSL_CTX_set_next_proto_select_cb
- lFpip:
  - SSL_CTX_callback_ctrl
  - SSL_callback_ctrl
- iFlpppp:
  - SSL_get_ex_new_index
wrappedlibtinfo:
- iFpip:
  - tputs
wrappedlibtinfo6:
- iFpip:
  - tputs
wrappedlibusb1:
- iFp:
  - libusb_cancel_transfer
  - libusb_submit_transfer
- pFi:
  - libusb_alloc_transfer
- iFpiiiiippp:
  - libusb_hotplug_register_callback
wrappedlibuuid:
wrappedlibvorbis:
wrappedlibx11:
- iFp:
  - XDestroyImage
  - XInitImage
- pFp:
  - XOpenDisplay
  - XSetErrorHandler
  - XSetIOErrorHandler
- vFpp:
  - _XDeqAsyncHandler
- pFiV:
  - XVaCreateNestedList
- pFpi:
  - XSynchronize
- pFpp:
  - XSetAfterFunction
- pFpV:
  - XCreateIC
  - XSetICValues
  - XSetIMValues
- iFppp:
  - XAddConnectionWatch
  - XRemoveConnectionWatch
- pFpip:
  - XESetCloseDisplay
  - XESetError
  - XESetEventToWire
  - XESetWireToEvent
- iFpppp:
  - XCheckIfEvent
  - XIfEvent
  - XPeekIfEvent
- iFppppp:
  - XQueryExtension
- iFpppppp:
  - XRegisterIMInstantiateCallback
  - XUnregisterIMInstantiateCallback
- pFppiiuuLi:
  - XGetImage
- iFppppiiiiuu:
  - XPutImage
- pFppuiipuuii:
  - XCreateImage
- pFppiiuuuipii:
  - XGetSubImage
wrappedlibx11xcb:
wrappedlibxau:
wrappedlibxcb:
wrappedlibxcbdri2:
% x my_xcb_cookie_t u
wrappedlibxcbdri3:
wrappedlibxcbglx:
wrappedlibxcbimage:
wrappedlibxcbkeysyms:
wrappedlibxcbrandr:
wrappedlibxcbshape:
wrappedlibxcbshm:
wrappedlibxcbxfixes:
wrappedlibxcbxtest:
wrappedlibxcomposite:
wrappedlibxcursor:
wrappedlibxdamage:
wrappedlibxdmcp:
wrappedlibxext:
- pFp:
  - XSetExtensionErrorHandler
- iFpppiiu:
  - XShmGetImage
- pFppppip:
  - XextAddDisplay
- pFppuippuu:
  - XShmCreateImage
- iFppppiiiiuui:
  - XShmPutImage
wrappedlibxfixes:
wrappedlibxft:
wrappedlibxi:
wrappedlibxmu:
wrappedlibxpm:
wrappedlibxrandr:
wrappedlibxrender:
wrappedlibxss:
wrappedlibxt:
- lFppp:
  - XtAppAddWorkProc
- vFpuipp:
  - XtAddEventHandler
- lFpippp:
  - XtAppAddInput
wrappedlibxtst:
- iFpppp:
  - XRecordEnableContext
  - XRecordEnableContextAsync
wrappedlibxxf86vm:
wrappedlibz:
- iFp:
  - deflateEnd
  - inflateEnd
- iFpi:
  - inflate
- iFppi:
  - inflateInit_
- iFpipi:
  - deflateInit_
  - inflateInit2_
- iFpippi:
  - inflateBackInit_
- iFpiiiiipi:
  - deflateInit2_
wrappedlzma:
- vFpp:
  - lzma_index_end
- iFpppppL:
  - lzma_index_buffer_decode
- iFpupppLppL:
  - lzma_stream_buffer_decode
wrappedmpg123:
- iFpppp:
  - mpg123_replace_reader_handle
  - mpg123_replace_reader_handle_32
  - mpg123_replace_reader_handle_64
wrappednotify:
wrappednsl:
wrappednspr4:
wrappednss3:
- vFp:
  - PK11_SetPasswordFunc
wrappednssutil3:
wrappedopenal:
- vFv:
  - alRequestFoldbackStop
- pFp:
  - alGetProcAddress
- pFpp:
  - alcGetProcAddress
- vFiiipp:
  - alRequestFoldbackStart
wrappedpango:
- vFpp:
  - pango_attribute_init
wrappedpangocairo:
wrappedpangoft2:
wrappedplc4:
wrappedplds4:
wrappedpng16:
- vFpp:
  - png_set_read_user_transform_fn
- vFppp:
  - png_set_read_fn
- vFpppp:
  - png_set_error_fn
  - png_set_write_fn
- pFpppp:
  - png_create_read_struct
- vFppppp:
  - png_set_progressive_read_fn
- pFppppppp:
  - png_create_read_struct_2
  - png_create_write_struct_2
wrappedpulse:
- vFp:
  - pa_mainloop_free
  - pa_threaded_mainloop_free
- iFp:
  - pa_signal_init
- pFp:
  - pa_mainloop_get_api
  - pa_threaded_mainloop_get_api
- vFpp:
  - pa_signal_set_destroy
- pFpp:
  - pa_context_new
- vFppp:
  - pa_context_set_event_callback
  - pa_context_set_state_callback
  - pa_context_set_subscribe_callback
  - pa_mainloop_set_poll_func
  - pa_stream_set_buffer_attr_callback
  - pa_stream_set_event_callback
  - pa_stream_set_latency_update_callback
  - pa_stream_set_moved_callback
  - pa_stream_set_overflow_callback
  - pa_stream_set_read_callback
  - pa_stream_set_started_callback
  - pa_stream_set_state_callback
  - pa_stream_set_suspended_callback
  - pa_stream_set_underflow_callback
  - pa_stream_set_write_callback
- pFipp:
  - pa_signal_new
- pFppp:
  - pa_context_drain
  - pa_context_exit_daemon
  - pa_context_get_card_info_list
  - pa_context_get_client_info_list
  - pa_context_get_module_info_list
  - pa_context_get_server_info
  - pa_context_get_sink_info_list
  - pa_context_get_sink_input_info_list
  - pa_context_get_source_info_list
  - pa_context_get_source_output_info_list
  - pa_context_new_with_proplist
  - pa_ext_device_restore_read_formats_all
  - pa_ext_device_restore_set_subscribe_cb
  - pa_stream_drain
  - pa_stream_flush
  - pa_stream_prebuf
  - pa_stream_trigger
  - pa_stream_update_timing_info
- iFppip:
  - pa_context_connect
- iFpppV:
  - pa_proplist_setf
- pFpipp:
  - pa_ext_device_restore_subscribe
  - pa_stream_cork
- pFpupp:
  - pa_context_get_card_info_by_index
  - pa_context_get_client_info
  - pa_context_get_sink_info_by_index
  - pa_context_get_sink_input_info
  - pa_context_get_source_info_by_index
  - pa_context_get_source_output_info
  - pa_context_subscribe
  - pa_context_unload_module
  - pa_stream_update_sample_rate
- pFpppp:
  - pa_context_get_sink_info_by_name
  - pa_context_get_source_info_by_name
  - pa_context_proplist_remove
  - pa_context_set_default_sink
  - pa_context_set_default_source
  - pa_context_set_name
  - pa_stream_proplist_remove
  - pa_stream_set_buffer_attr
  - pa_stream_set_name
- pFpiupp:
  - pa_ext_device_restore_read_formats
- pFpippp:
  - pa_context_proplist_update
  - pa_stream_proplist_update
- pFpuipp:
  - pa_context_set_sink_input_mute
  - pa_context_set_sink_mute_by_index
  - pa_context_set_source_mute_by_index
- pFpuupp:
  - pa_context_move_sink_input_by_index
  - pa_context_move_source_output_by_index
- pFpuppp:
  - pa_context_set_card_profile_by_index
  - pa_context_set_sink_input_volume
  - pa_context_set_sink_port_by_index
  - pa_context_set_sink_volume_by_index
  - pa_context_set_source_port_by_index
  - pa_context_set_source_volume_by_index
- pFppppp:
  - pa_context_load_module
  - pa_context_set_sink_port_by_name
  - pa_context_set_source_volume_by_name
- iFppLpIi:
  - pa_stream_write
- pFpiuCppp:
  - pa_ext_device_restore_save_formats
wrappedpulsesimple:
wrappedsdl1:
- vFp:
  - SDL_KillThread
  - SDL_SetEventFilter
  - SDL_UnloadObject
- iFv:
  - SDL_Has3DNow
  - SDL_Has3DNowExt
  - SDL_HasAltiVec
  - SDL_HasMMX
  - SDL_HasMMXExt
  - SDL_HasRDTSC
  - SDL_HasSSE
  - SDL_HasSSE2
- iFp:
  - SDL_GetWMInfo
  - SDL_RemoveTimer
- uFp:
  - SDL_ReadBE16
  - SDL_ReadBE32
  - SDL_ReadLE16
  - SDL_ReadLE32
- UFp:
  - SDL_ReadBE64
  - SDL_ReadLE64
- pFv:
  - SDL_GetEventFilter
- pFp:
  - SDL_GL_GetProcAddress
  - SDL_LoadObject
- iFup:
  - SDL_SetTimer
- iFpp:
  - SDL_OpenAudio
- uFpW:
  - SDL_WriteBE16
  - SDL_WriteLE16
- uFpu:
  - SDL_WriteBE32
  - SDL_WriteLE32
- uFpU:
  - SDL_WriteBE64
  - SDL_WriteLE64
- pFpi:
  - SDL_LoadBMP_RW
  - SDL_RWFromConstMem
  - SDL_RWFromFP
  - SDL_RWFromMem
- pFpp:
  - SDL_CreateThread
  - SDL_LoadFunction
  - SDL_RWFromFile
- iFppi:
  - SDL_SaveBMP_RW
- pFupp:
  - SDL_AddTimer
- pFpippp:
  - SDL_LoadWAV_RW
wrappedsdl1image:
- pFp:
  - IMG_LoadBMP_RW
  - IMG_LoadCUR_RW
  - IMG_LoadGIF_RW
  - IMG_LoadICO_RW
  - IMG_LoadJPG_RW
  - IMG_LoadLBM_RW
  - IMG_LoadPCX_RW
  - IMG_LoadPNG_RW
  - IMG_LoadPNM_RW
  - IMG_LoadTGA_RW
  - IMG_LoadTIF_RW
  - IMG_LoadWEBP_RW
  - IMG_LoadXCF_RW
  - IMG_LoadXPM_RW
  - IMG_LoadXV_RW
- pFpi:
  - IMG_Load_RW
- pFpip:
  - IMG_LoadTyped_RW
wrappedsdl1mixer:
- vFp:
  - Mix_ChannelFinished
  - Mix_HookMusicFinished
- pFp:
  - Mix_LoadMUS_RW
- vFpp:
  - Mix_HookMusic
  - Mix_SetPostMix
- iFip:
  - Mix_UnregisterEffect
- pFpi:
  - Mix_LoadWAV_RW
- pFpii:
  - Mix_LoadMUSType_RW
- iFippp:
  - Mix_RegisterEffect
wrappedsdl1net:
wrappedsdl1sound:
- pFpppu:
  - Sound_NewSample
wrappedsdl1ttf:
- pFpii:
  - TTF_OpenFontRW
- pFpiii:
  - TTF_OpenFontIndexRW
wrappedsdl2:
% G SDL_JoystickGUID UU
- vFp:
  - SDL_UnloadObject
- iFv:
  - SDL_Has3DNow
  - SDL_HasAVX
  - SDL_HasAVX2
  - SDL_HasAVX512F
  - SDL_HasAltiVec
  - SDL_HasMMX
  - SDL_HasNEON
  - SDL_HasRDTSC
  - SDL_HasSSE
  - SDL_HasSSE2
  - SDL_HasSSE3
  - SDL_HasSSE41
  - SDL_HasSSE42
- iFp:
  - SDL_RWclose
  - SDL_RemoveTimer
  - SDL_SaveAllDollarTemplates
- IFp:
  - SDL_RWtell
- uFp:
  - SDL_ReadBE16
  - SDL_ReadBE32
  - SDL_ReadLE16
  - SDL_ReadLE32
  - SDL_ReadU8
- UFp:
  - SDL_ReadBE64
  - SDL_ReadLE64
- pFv:
  - SDL_GetBasePath
  - SDL_Vulkan_GetVkGetInstanceProcAddr
- pFp:
  - SDL_GL_GetProcAddress
  - SDL_LoadObject
- vFpp:
  - SDL_AddEventWatch
  - SDL_DelEventWatch
  - SDL_LogGetOutputFunction
  - SDL_LogSetOutputFunction
  - SDL_SetEventFilter
- vFpV:
  - SDL_Log
- iFip:
  - SDL_SaveDollarTemplate
- iFWW:
  - SDL_IsJoystickNintendoSwitchPro
  - SDL_IsJoystickPS4
  - SDL_IsJoystickSteamController
  - SDL_IsJoystickXbox360
  - SDL_IsJoystickXboxOne
- iFUU:
  - SDL_IsJoystickHIDAPI
  - SDL_IsJoystickXInput
- iFpi:
  - SDL_GameControllerAddMappingsFromRW
- iFpp:
  - SDL_GetEventFilter
  - SDL_OpenAudio
- uFpW:
  - SDL_WriteBE16
  - SDL_WriteLE16
- uFpu:
  - SDL_WriteBE32
  - SDL_WriteLE32
  - SDL_WriteU8
- uFpU:
  - SDL_WriteBE64
  - SDL_WriteLE64
- pFpi:
  - SDL_LoadBMP_RW
  - SDL_RWFromConstMem
  - SDL_RWFromFP
  - SDL_RWFromMem
- pFpp:
  - SDL_LoadFunction
  - SDL_RWFromFile
- vFipV:
  - SDL_LogCritical
  - SDL_LogDebug
  - SDL_LogError
  - SDL_LogInfo
  - SDL_LogVerbose
  - SDL_LogWarn
- iFupp:
  - SDL_TLSSet
- iFppi:
  - SDL_SaveBMP_RW
- iFppV:
  - SDL_sscanf
- IFpIi:
  - SDL_RWseek
- pFupp:
  - SDL_AddTimer
- pFppi:
  - SDL_LoadFile_RW
- pFppp:
  - SDL_CreateThread
- vFpuup:
  - SDL_qsort
- vFGppp:
  - SDL_GetJoystickGUIDInfo
- iFpLpp:
  - SDL_vsnprintf
- iFpLpV:
  - SDL_snprintf
- uFppuu:
  - SDL_RWread
  - SDL_RWwrite
- iFpippi:
  - SDL_OpenAudioDevice
- pFpippp:
  - SDL_LoadWAV_RW
% vFGppp
wrappedsdl2image:
- pFp:
  - IMG_LoadBMP_RW
  - IMG_LoadCUR_RW
  - IMG_LoadGIF_RW
  - IMG_LoadICO_RW
  - IMG_LoadJPG_RW
  - IMG_LoadLBM_RW
  - IMG_LoadPCX_RW
  - IMG_LoadPNG_RW
  - IMG_LoadPNM_RW
  - IMG_LoadTGA_RW
  - IMG_LoadTIF_RW
  - IMG_LoadWEBP_RW
  - IMG_LoadXCF_RW
  - IMG_LoadXPM_RW
  - IMG_LoadXV_RW
- pFpi:
  - IMG_Load_RW
- iFppi:
  - IMG_SavePNG_RW
- pFpip:
  - IMG_LoadTyped_RW
- pFppi:
  - IMG_LoadTexture_RW
- pFppip:
  - IMG_LoadTextureTyped_RW
wrappedsdl2mixer:
- vFp:
  - Mix_ChannelFinished
  - Mix_HookMusicFinished
- vFpp:
  - Mix_HookMusic
  - Mix_SetPostMix
- iFiw:
  - MinorityMix_SetPosition
- iFip:
  - Mix_UnregisterEffect
- pFpi:
  - Mix_LoadMUS_RW
  - Mix_LoadWAV_RW
- pFpii:
  - Mix_LoadMUSType_RW
- iFippp:
  - Mix_RegisterEffect
wrappedsdl2net:
wrappedsdl2ttf:
- pFpii:
  - TTF_OpenFontRW
- pFpiii:
  - TTF_OpenFontIndexRW
wrappedsecret1:
wrappedselinux:
wrappedsmime3:
- iFpp:
  - SEC_PKCS12DecoderValidateBags
- iFppp:
  - SEC_PKCS12Encode
- pFpppp:
  - SEC_PKCS12CreateExportContext
- pFpppppppp:
  - SEC_PKCS12DecoderStart
- pFppppppppppp:
  - NSS_CMSEncoder_Start
wrappedsmpeg:
- pFppi:
  - SMPEG_new_rwops
- vFpppp:
  - SMPEG_setdisplay
wrappedsmpeg2:
- vFpppp:
  - SMPEG_setdisplay
- pFppii:
  - SMPEG_new_rwops
wrappedssl3:
wrappedtcmallocminimal:
- iFpL:
  - munmap
- pFpLiiii:
  - mmap
- pFpLiiiI:
  - mmap64
wrappedudev0:
- vFpp:
  - udev_set_log_fn
wrappedudev1:
- vFpp:
  - udev_set_log_fn
wrappedunwind:
- iFp:
  - _ULx86_64_step
- iFpp:
  - _ULx86_64_get_proc_info
  - _ULx86_64_init_local
- iFpip:
  - _ULx86_64_get_reg
wrappedutil:
- iFpppp:
  - forkpty
wrappedvorbisfile:
- iFppplPPPP:
  - ov_open_callbacks
  - ov_test_callbacks
wrappedvulkan:
- vFpp:
  - vkDestroyDevice
  - vkDestroyInstance
  - vkGetPhysicalDeviceMemoryProperties
  - vkGetPhysicalDeviceProperties
- pFpp:
  - vkGetDeviceProcAddr
  - vkGetInstanceProcAddr
- vFpUp:
  - vkDestroyBuffer
  - vkDestroyBufferView
  - vkDestroyCommandPool
  - vkDestroyDescriptorPool
  - vkDestroyDescriptorSetLayout
  - vkDestroyDescriptorUpdateTemplate
  - vkDestroyDescriptorUpdateTemplateKHR
  - vkDestroyEvent
  - vkDestroyFence
  - vkDestroyFramebuffer
  - vkDestroyImage
  - vkDestroyImageView
  - vkDestroyPipeline
  - vkDestroyPipelineCache
  - vkDestroyPipelineLayout
  - vkDestroyQueryPool
  - vkDestroyRenderPass
  - vkDestroySampler
  - vkDestroySamplerYcbcrConversionKHR
  - vkDestroySemaphore
  - vkDestroyShaderModule
  - vkDestroySurfaceKHR
  - vkDestroySwapchainKHR
  - vkDestroyValidationCacheEXT
- vFppp:
  - vkDestroyDebugUtilsMessengerEXT
- iFpUp:
  - vkFreeMemory
- iFppp:
  - vkCreateInstance
  - vkDestroyDebugReportCallbackEXT
  - vkGetPhysicalDeviceDisplayPropertiesKHR
- iFpUup:
  - vkGetDisplayPlaneCapabilitiesKHR
- iFpppp:
  - vkAllocateMemory
  - vkCreateBuffer
  - vkCreateBufferView
  - vkCreateCommandPool
  - vkCreateDebugReportCallbackEXT
  - vkCreateDebugUtilsMessengerEXT
  - vkCreateDescriptorPool
  - vkCreateDescriptorSetLayout
  - vkCreateDescriptorUpdateTemplate
  - vkCreateDescriptorUpdateTemplateKHR
  - vkCreateDevice
  - vkCreateDisplayPlaneSurfaceKHR
  - vkCreateEvent
  - vkCreateFence
  - vkCreateFramebuffer
  - vkCreateHeadlessSurfaceEXT
  - vkCreateImage
  - vkCreateImageView
  - vkCreatePipelineCache
  - vkCreatePipelineLayout
  - vkCreateQueryPool
  - vkCreateRenderPass
  - vkCreateRenderPass2
  - vkCreateRenderPass2KHR
  - vkCreateSampler
  - vkCreateSamplerYcbcrConversion
  - vkCreateSamplerYcbcrConversionKHR
  - vkCreateSemaphore
  - vkCreateShaderModule
  - vkCreateSwapchainKHR
  - vkCreateValidationCacheEXT
  - vkCreateWaylandSurfaceKHR
  - vkCreateXcbSurfaceKHR
  - vkCreateXlibSurfaceKHR
  - vkRegisterDeviceEventEXT
- vFpupup:
  - vkUpdateDescriptorSets
- iFpuppp:
  - vkCreateSharedSwapchainsKHR
- iFpUppp:
  - vkCreateDisplayModeKHR
  - vkRegisterDisplayEventEXT
- iFpUuppp:
  - vkCreateComputePipelines
  - vkCreateGraphicsPipelines
- vFpiiiiipp:
  - vkGetPhysicalDeviceSparseImageFormatProperties
- vFpiiiupupup:
  - vkCmdPipelineBarrier
wrappedxinerama:
wrappedxkbcommon:
wrappedxkbcommonx11:
wrappedxml2:
- vFp:
  - xmlSetExternalEntityLoader
- iFp:
  - xmlParseDocument
- pFv:
  - xmlGetExternalEntityLoader
- vFpp:
  - xmlHashFree
- pFpp:
  - xmlHashCopy
- vFppp:
  - xmlHashScan
  - xmlHashScanFull
  - xmlSchemaSetParserStructuredErrors
  - xmlSchemaSetValidStructuredErrors
- iFppp:
  - xmlHashRemoveEntry
  - xmlXPathRegisterFunc
- pFppp:
  - xmlNewCharEncodingHandler
- vFpppp:
  - xmlSchemaSetParserErrors
  - xmlSchemaSetValidErrors
- iFpppp:
  - xmlHashRemoveEntry2
  - xmlHashUpdateEntry
  - xmlRegisterInputCallbacks
- pFpppi:
  - xmlParserInputBufferCreateIO
- pFpppp:
  - xmlOutputBufferCreateIO
- iFppppp:
  - xmlHashRemoveEntry3
  - xmlHashUpdateEntry2
- pFppppi:
  - xmlSaveToIO
- vFpppppp:
  - xmlHashScan3
  - xmlHashScanFull3
- iFpppppp:
  - xmlHashUpdateEntry3
- pFpppppi:
  - xmlCreateIOParserCtxt
wrappedxslt:
- vFp:
  - xsltSetLoaderFunc
- iFppp:
  - xsltRegisterExtModuleFunction
